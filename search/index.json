[{"content":"结构体、指针 结构体 类型声明 结构体的声明和类的声明类似，区别如下：\n使用关键字 struct。 通常只声明成员变量，不包含成员函数。 结构体的成员默认是 public 的。 1 2 3 4 5 6 7 8 9 10 结构体模板： struct 结构体名称 { 成员列表 }; 结构体示例： struct ListNode { int val; ListNode *next; }; 别名 1 2 3 typedef struct ListNode { ... } LN; 构造函数 可以使用构造函数来初始化结构体：\n1 2 3 4 5 6 7 8 9 10 11 12 13 struct Employee { string name; // 员工姓名 int vacationDays, // 允许的年假 daysUsed; //已使用的年假天数 Employee (string n = \u0026#34;\u0026#34;, int d = 0) { // 构造函数 name = n; vacationDays = 10; daysUsed = d; } }; // 初始化 Employee castor(\u0026#34;Castor\u0026#34;, 3); 指针与引用 变量的指针是变量的地址。 存放另一个变量的地址的变量，成为指针变量，它的值为指针。 指针变量只能指向同一个类型的变量。 1 2 int i = 1, j = 2; // 变量 int *p1 = \u0026amp;i, *p2 = \u0026amp;j; // 指针变量 ","date":"2024-06-17T13:52:36+08:00","permalink":"http://dhu.3000ye.com/p/ch0-%E7%BB%93%E6%9E%84%E4%BD%93%E4%B8%8E%E6%8C%87%E9%92%88/","title":"Ch0: 结构体与指针"}]